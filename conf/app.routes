# microservice specific routes

->      /hmrc-frontend                              hmrcfrontend.Routes

GET     /assets/*file                               controllers.Assets.versioned(path = "/public", file: Asset)

GET     /                                           controllers.RootController.start

# opt-in/out
GET     /turn-on-guide                              controllers.OptInController.start
GET     /confirm-turn-on                            controllers.OptInController.showDoYouWantToOptIn
POST    /confirm-turn-on                            controllers.OptInController.submitDoYouWantToOptIn

GET     /access-groups-turned-on                    controllers.OptInController.showYouHaveOptedIn

GET     /turn-off-guide                             controllers.OptOutController.start
GET     /confirm-turn-off                           controllers.OptOutController.showDoYouWantToOptOut
POST    /confirm-turn-off                           controllers.OptOutController.submitDoYouWantToOptOut

GET     /access-groups-turned-off                   controllers.OptOutController.showYouHaveOptedOut

# create group
GET     /group/create-access-group                  controllers.GroupController.start

GET     /create-access-group-name                   controllers.GroupController.showGroupName
POST    /create-access-group-name                   controllers.GroupController.submitGroupName

GET     /confirm-access-group-name                  controllers.GroupController.showConfirmGroupName
POST    /confirm-access-group-name                  controllers.GroupController.submitConfirmGroupName

GET     /access-group-name-exists             controllers.GroupController.showAccessGroupNameExists

GET     /select-clients                       controllers.GroupController.showSelectClients
POST    /select-clients                       controllers.GroupController.submitSelectedClients

GET     /clients-selected                     controllers.GroupController.showReviewSelectedClients
POST    /clients-selected                     controllers.GroupController.submitReviewSelectedClients

GET     /select-team-members                  controllers.GroupController.showSelectTeamMembers
POST    /select-team-members                  controllers.GroupController.submitSelectedTeamMembers

GET     /team-members-selected                controllers.GroupController.showReviewSelectedTeamMembers
POST    /team-members-selected                controllers.GroupController.submitReviewSelectedTeamMembers

GET     /confirm-clients-team-members         controllers.GroupController.showCheckYourAnswers
POST    /confirm-clients-team-members         controllers.GroupController.submitCheckYourAnswers

GET     /group-created                        controllers.GroupController.showGroupCreated

# Manage groups
GET     /manage-access-groups                       controllers.ManageGroupController.showManageGroups
POST    /manage-access-groups                       controllers.ManageGroupController.submitAddUnassignedClients
POST    /manage-access-groups/search                controllers.ManageGroupController.submitFilterByGroupName

GET     /rename-access-group/:groupId               controllers.ManageGroupController.showRenameGroup(groupId: String)
POST    /rename-access-group/:groupId               controllers.ManageGroupController.submitRenameGroup(groupId: String)
GET     /access-group-renamed/:groupId              controllers.ManageGroupController.showGroupRenamed(groupId: String)

GET     /delete-access-group/:groupId               controllers.ManageGroupController.showDeleteGroup(groupId: String)
POST    /delete-access-group/:groupId               controllers.ManageGroupController.submitDeleteGroup(groupId: String)
GET     /access-group-deleted                       controllers.ManageGroupController.showGroupDeleted

# Manage groups - clients
GET     /manage-access-groups/manage-clients/:groupId               controllers.ManageGroupClientsController.showExistingGroupClients(groupId: String)
GET     /update-clients/:groupId                                    controllers.ManageGroupClientsController.showManageGroupClients(groupId: String)
POST    /update-clients/:groupId                                    controllers.ManageGroupClientsController.submitManageGroupClients(groupId: String)
GET     /clients-selected/:groupId                                  controllers.ManageGroupClientsController.showReviewSelectedClients(groupId: String)
POST    /clients-selected/:groupId                                  controllers.ManageGroupClientsController.submitReviewSelectedClients(groupId: String)
GET     /clients-updated/:groupId                                   controllers.ManageGroupClientsController.showGroupClientsUpdatedConfirmation(groupId: String)

# Manage groups - team members
GET     /manage-group-team-members/:groupId         controllers.ManageGroupTeamMembersController.showExistingGroupTeamMembers(groupId: String)
GET     /update-group-team-members/:groupId         controllers.ManageGroupTeamMembersController.showManageGroupTeamMembers(groupId: String)
POST    /update-group-team-members/:groupId         controllers.ManageGroupTeamMembersController.submitManageGroupTeamMembers(groupId: String)
GET     /update-group-team-members/review/:groupId  controllers.ManageGroupTeamMembersController.showReviewSelectedTeamMembers(groupId: String)
POST    /update-group-team-members/review/:groupId  controllers.ManageGroupTeamMembersController.submitReviewSelectedTeamMembers(groupId: String)
GET     /team-members-updated/:groupId              controllers.ManageGroupTeamMembersController.showGroupTeamMembersUpdatedConfirmation(groupId: String)


# UNASSIGNED CLIENTS
GET     /manage-access-group/unassigned-clients-selected        controllers.ManageGroupController.showSelectedUnassignedClients
GET     /manage-access-group/unassigned-clients-select-group    controllers.ManageGroupController.showSelectGroupsForSelectedUnassignedClients
POST    /manage-access-group/unassigned-clients-select-group    controllers.ManageGroupController.submitSelectGroupsForSelectedUnassignedClients
GET     /manage-access-group/clients-assigned                   controllers.ManageGroupController.showConfirmClientsAddedToGroups


# Manage clients
GET     /manage-clients                                               controllers.ManageClientController.showAllClients
GET     /manage-clients/client-details/:id                            controllers.ManageClientController.showClientDetails(id: String)

GET     /manage-clients/client-details/update-client-reference/:id    controllers.ManageClientController.showUpdateClientReference(id: String)
POST    /manage-clients/client-details/update-client-reference/:id    controllers.ManageClientController.submitUpdateClientReference(id: String)
GET     /manage-clients/client-details/client-reference-updated/:id   controllers.ManageClientController.showClientReferenceUpdatedComplete(id: String)

GET     /manage-clients/assign-to-a-group/:id           controllers.AddClientToGroupsController.showSelectGroupsForClient(id: String)
POST    /manage-clients/assign-to-a-group/:id           controllers.AddClientToGroupsController.submitSelectGroupsForClient(id: String)
GET     /manage-clients/assigned-to-groups/:id          controllers.AddClientToGroupsController.showConfirmClientAddedToGroups(id: String)

# Manage team members
GET     /manage-team-members                            controllers.ManageTeamMemberController.showAllTeamMembers
GET     /manage-team-members/team-member-details/:id    controllers.ManageTeamMemberController.showTeamMemberDetails(id: String)

GET     /manage-team-members/assign-to-a-group/:id      controllers.AddTeamMemberToGroupsController.showSelectGroupsForTeamMember(id: String)
POST    /manage-team-members/assign-to-a-group/:id      controllers.AddTeamMemberToGroupsController.submitSelectGroupsForTeamMember(id: String)
GET     /manage-team-members/assigned-to-groups/:id     controllers.AddTeamMemberToGroupsController.showConfirmTeamMemberAddedToGroups(id: String)

GET     /you-have-been-timed-out    controllers.TimeoutController.timedOut
GET     /keep-alive                 controllers.TimeoutController.keepAlive
GET     /sign-out                   controllers.TimeoutController.signOut

