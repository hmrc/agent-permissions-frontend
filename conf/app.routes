# microservice specific routes
->      /hmrc-frontend                              hmrcfrontend.Routes
GET     /assets/*file                               controllers.Assets.versioned(path = "/public", file: Asset)

GET     /                                           controllers.RootController.start

# opt-in/out
GET     /turn-on-guide                              controllers.OptInController.start
GET     /confirm-turn-on                            controllers.OptInController.showDoYouWantToOptIn
POST    /confirm-turn-on                            controllers.OptInController.submitDoYouWantToOptIn

GET     /access-groups-turned-on                    controllers.OptInController.showYouHaveOptedIn

GET     /turn-off-guide                             controllers.OptOutController.start
GET     /confirm-turn-off                           controllers.OptOutController.showDoYouWantToOptOut
POST    /confirm-turn-off                           controllers.OptOutController.submitDoYouWantToOptOut

GET     /access-groups-turned-off                   controllers.OptOutController.showYouHaveOptedOut

# 1000+ create group journey
GET     /create-group/select-group-type             controllers.CreateGroupSelectGroupTypeController.showSelectGroupType
POST    /create-group/select-group-type             controllers.CreateGroupSelectGroupTypeController.submitSelectGroupType
GET     /create-group/select-tax-service            controllers.CreateGroupSelectGroupTypeController.showSelectTaxServiceGroupType
POST    /create-group/select-tax-service            controllers.CreateGroupSelectGroupTypeController.submitSelectTaxServiceGroupType
GET     /create-group/review-tax-service-group      controllers.CreateGroupSelectGroupTypeController.showReviewTaxServiceGroupType
POST    /create-group/review-tax-service-group      controllers.CreateGroupSelectGroupTypeController.submitReviewTaxServiceGroupType

GET     /create-group/select-name       controllers.CreateGroupSelectNameController.showGroupName
POST    /create-group/select-name       controllers.CreateGroupSelectNameController.submitGroupName
GET     /create-group/confirm-name      controllers.CreateGroupSelectNameController.showConfirmGroupName
POST    /create-group/confirm-name      controllers.CreateGroupSelectNameController.submitConfirmGroupName
GET     /create-group/name-exists       controllers.CreateGroupSelectNameController.showAccessGroupNameExists

GET     /create-group/search-clients                    controllers.CreateGroupSelectClientsController.showSearchClients
POST    /create-group/search-clients                    controllers.CreateGroupSelectClientsController.submitSearchClients
GET     /create-group/select-clients                    controllers.CreateGroupSelectClientsController.showSelectClients(page: Option[Int], pageSize: Option[Int])
POST    /create-group/select-clients                    controllers.CreateGroupSelectClientsController.submitSelectedClients
GET     /create-group/clients-selected                  controllers.CreateGroupSelectClientsController.showReviewSelectedClients(page: Option[Int], pageSize: Option[Int])
POST    /create-group/clients-selected                  controllers.CreateGroupSelectClientsController.submitReviewSelectedClients
GET     /create-group/clients/confirm-remove            controllers.CreateGroupSelectClientsController.showConfirmRemoveClient(id: Option[String]?=None)
POST    /create-group/clients/confirm-remove            controllers.CreateGroupSelectClientsController.submitConfirmRemoveClient

GET     /create-group/select-team-members               controllers.CreateGroupSelectTeamMembersController.showSelectTeamMembers(page: Option[Int], pageSize: Option[Int])
POST    /create-group/select-team-members               controllers.CreateGroupSelectTeamMembersController.submitSelectedTeamMembers
GET     /create-group/team-members-selected             controllers.CreateGroupSelectTeamMembersController.showReviewSelectedTeamMembers(page: Option[Int], pageSize: Option[Int])
POST    /create-group/team-members-selected             controllers.CreateGroupSelectTeamMembersController.submitReviewSelectedTeamMembers
GET     /create-group/team-members/confirm-remove/:id   controllers.CreateGroupSelectTeamMembersController.showConfirmRemoveTeamMember(id: String)
POST    /create-group/team-members/confirm-remove       controllers.CreateGroupSelectTeamMembersController.submitConfirmRemoveTeamMember
GET     /create-group/confirm                           controllers.CreateGroupSelectTeamMembersController.showGroupCreated

# Manage groups
GET     /manage-access-groups             controllers.ManageGroupController.showManageGroups(page: Option[Int], pageSize: Option[Int])
POST    /manage-access-groups             controllers.ManageGroupController.submitManageGroups

GET     /rename-custom-group/:groupId     controllers.ManageGroupController.showRenameGroup(groupId: String)
POST    /rename-custom-group/:groupId     controllers.ManageGroupController.submitRenameGroup(groupId: String)
GET     /custom-group-renamed/:groupId    controllers.ManageGroupController.showGroupRenamed(groupId: String)

GET     /rename-tax-group/:groupId        controllers.ManageGroupController.showRenameTaxGroup(groupId: String)
POST    /rename-tax-group/:groupId        controllers.ManageGroupController.submitRenameTaxGroup(groupId: String)
GET     /tax-group-renamed/:groupId       controllers.ManageGroupController.showTaxGroupRenamed(groupId: String)

GET     /delete-custom-group/:groupId        controllers.ManageGroupController.showDeleteGroup(groupId: String)
POST    /delete-custom-group/:groupId        controllers.ManageGroupController.submitDeleteGroup(groupId: String)

GET     /delete-tax-group/:groupId           controllers.ManageGroupController.showDeleteTaxGroup(groupId: String)
POST    /delete-tax-group/:groupId           controllers.ManageGroupController.submitDeleteTaxGroup(groupId: String)
GET     /access-group-deleted                controllers.ManageGroupController.showGroupDeleted

# Manage custom groups - clients
GET     /manage-custom-group/:groupId/view-clients                          controllers.ManageGroupClientsController.showExistingGroupClients(groupId: String, page: Option[Int], pageSize: Option[Int])
GET     /manage-custom-group/:groupId/clients/confirm-remove/:clientId      controllers.ManageGroupClientsController.showConfirmRemoveClient(groupId: String, clientId: String)
POST    /manage-custom-group/:groupId/clients/confirm-remove/:clientId      controllers.ManageGroupClientsController.submitConfirmRemoveClient(groupId: String, clientId: String)
GET     /manage-custom-group/:groupId/update-clients/search                 controllers.ManageGroupClientsController.showSearchClientsToAdd(groupId: String)
POST    /manage-custom-group/:groupId/update-clients/search                 controllers.ManageGroupClientsController.submitSearchClientsToAdd(groupId: String)
GET     /manage-custom-group/:groupId/update-clients/add                    controllers.ManageGroupClientsController.showAddClients(groupId: String, page: Option[Int], pageSize: Option[Int])
POST    /manage-custom-group/:groupId/update-clients/add                    controllers.ManageGroupClientsController.submitAddClients(groupId: String)
GET     /manage-custom-group/:groupId/update-clients/review                 controllers.ManageGroupClientsController.showReviewSelectedClients(groupId: String, page: Option[Int], pageSize: Option[Int])
POST    /manage-custom-group/:groupId/update-clients/review                 controllers.ManageGroupClientsController.submitReviewSelectedClients(groupId: String)

# Manage tax groups - clients
GET     /manage-tax-group/:groupId/clients     controllers.ManageTaxGroupClientsController.showExistingGroupClients(groupId: String, page: Option[Int], pageSize: Option[Int])

# Manage groups - team members
GET     /manage-group/:groupType/:groupId/team-members             controllers.ManageGroupTeamMembersController.showExistingGroupTeamMembers(groupId: String, groupType: String, page: Option[Int])
GET     /manage-custom-group/:groupId/team-members/confirm-remove/:memberId      controllers.ManageGroupTeamMembersController.showConfirmRemoveTeamMember(groupId: String, memberId: String)
POST    /manage-custom-group/:groupId/team-members/confirm-remove/:memberId      controllers.ManageGroupTeamMembersController.submitConfirmRemoveTeamMember(groupId: String, memberId: String)
GET     /manage-group/:groupType/:groupId/team-members/update      controllers.ManageGroupTeamMembersController.showManageGroupTeamMembers(groupId: String, groupType: String, page: Option[Int])
POST    /manage-group/:groupType/:groupId/team-members/update      controllers.ManageGroupTeamMembersController.submitManageGroupTeamMembers(groupId: String, groupType: String )
GET     /manage-group/:groupType/:groupId/team-members/review      controllers.ManageGroupTeamMembersController.showReviewSelectedTeamMembers(groupId: String, groupType: String, page: Option[Int])
POST    /manage-group/:groupType/:groupId/team-members/review      controllers.ManageGroupTeamMembersController.submitReviewSelectedTeamMembers(groupId: String, groupType: String)
GET     /manage-group/:groupType/:groupId/team-members/confirm     controllers.ManageGroupTeamMembersController.showGroupTeamMembersUpdatedConfirmation(groupId: String, groupType: String)

# UNASSIGNED CLIENTS
GET     /unassigned-clients                                     controllers.UnassignedClientController.showUnassignedClients(page: Option[Int] ?= None)
POST    /unassigned-clients                                     controllers.UnassignedClientController.submitAddUnassignedClients
GET     /manage-access-group/unassigned-clients-selected        controllers.UnassignedClientController.showSelectedUnassignedClients(page: Option[Int] ?= None, pageSize: Option[Int] ?= None)
POST    /manage-access-group/unassigned-clients-selected        controllers.UnassignedClientController.submitSelectedUnassignedClients
GET     /manage-access-group/unassigned-clients-select-group    controllers.UnassignedClientController.showSelectGroupsForSelectedUnassignedClients
POST    /manage-access-group/unassigned-clients-select-group    controllers.UnassignedClientController.submitSelectGroupsForSelectedUnassignedClients
GET     /manage-access-group/clients-assigned                   controllers.UnassignedClientController.showConfirmClientsAddedToGroups


# Manage clients
GET     /manage-clients                        controllers.ManageClientController.showPageOfClients(page: Option[Int])
POST    /manage-clients                        controllers.ManageClientController.submitPageOfClients
GET     /manage-clients/client-details/:id     controllers.ManageClientController.showClientDetails(id: String)

GET     /manage-clients/client-details/update-client-reference/:id    controllers.ManageClientController.showUpdateClientReference(id: String)
POST    /manage-clients/client-details/update-client-reference/:id    controllers.ManageClientController.submitUpdateClientReference(id: String)
GET     /manage-clients/client-details/client-reference-updated/:id   controllers.ManageClientController.showClientReferenceUpdatedComplete(id: String)

GET     /manage-clients/assign-to-a-group/:id           controllers.AddClientToGroupsController.showSelectGroupsForClient(id: String)
POST    /manage-clients/assign-to-a-group/:id           controllers.AddClientToGroupsController.submitSelectGroupsForClient(id: String)
GET     /manage-clients/assigned-to-groups/:id          controllers.AddClientToGroupsController.showConfirmClientAddedToGroups(id: String)

# Manage team members
GET     /manage-team-members                            controllers.ManageTeamMemberController.showPageOfTeamMembers(page: Option[Int])
POST    /manage-team-members                            controllers.ManageTeamMemberController.submitPageOfTeamMembers
GET     /manage-team-members/team-member-details/:id    controllers.ManageTeamMemberController.showTeamMemberDetails(id: String)

GET     /manage-team-members/assign-to-a-group/:id      controllers.AddTeamMemberToGroupsController.showSelectGroupsForTeamMember(id: String)
POST    /manage-team-members/assign-to-a-group/:id      controllers.AddTeamMemberToGroupsController.submitSelectGroupsForTeamMember(id: String)
GET     /manage-team-members/assigned-to-groups/:id     controllers.AddTeamMemberToGroupsController.showConfirmTeamMemberAddedToGroups(id: String)

# Assistant / 'Standard' user views
GET     /your-account/group-clients/custom/:groupId     controllers.AssistantViewOnlyController.showExistingGroupClientsViewOnly(groupId: String, page: Option[Int] ?= None)
POST    /your-account/group-clients/custom/:groupId     controllers.AssistantViewOnlyController.submitExistingGroupClientsViewOnly(groupId: String)
GET     /your-account/group-clients/tax/:groupId        controllers.AssistantViewOnlyController.showExistingTaxClientsViewOnly(groupId: String, page: Option[Int] ?= None)
POST    /your-account/group-clients/tax/:groupId        controllers.AssistantViewOnlyController.submitExistingTaxClientsViewOnly(groupId: String)
GET     /your-account/other-clients                     controllers.AssistantViewOnlyController.showUnassignedClientsViewOnly(page: Option[Int] ?= None)
POST    /your-account/other-clients                     controllers.AssistantViewOnlyController.submitUnassignedClientsViewOnly

GET     /you-have-been-timed-out                        controllers.TimeoutController.timedOut
GET     /keep-alive                                     controllers.TimeoutController.keepAlive
GET     /sign-out                                       controllers.TimeoutController.signOut

